CHAPTER 18. CONFRONTING THE PARTITION FUNCTION
NCE is thus simple to apply so long as log p~model is easy to back-propagate through, and, as specified above, pnoise is easy to evaluate (in order to evaluate pjoint) and sample from (in order to generate the training data).
NCE is most successful when applied to problems with few random variables, but can work well even if those random variables can take on a high number of values. For example, it has been successfully applied to modeling the conditional distribution over a word given the context of the word (Mnih and Kavukcuoglu, 2013). Though the word may be drawn from a large vocabulary, there is only one word.
When NCE is applied to problems with many random variables, it becomes less efficient. The logistic regression classifier can reject a noise sample by identifying any one variable whose value is unlikely. This means that learning slows down greatly after pmodel has learned the basic marginal statistics. Imagine learning a model of images of faces, using unstructured Gaussian noise as pnoise . If pmodel learns about eyes, it can reject almost all unstructured noise samples without having learned anything about other facial features, such as mouths.
The constraint that pnoise must be easy to evaluate and easy to sample from can be overly restrictive. When pnoise is simple, most samples are likely to be too obviously distinct from the data to force pmodel to improve noticeably.
Like score matching and pseudolikelihood, NCE does not work if only a lower bound on p~ is available. Such a lower bound could be used to construct a lower bound on pjoint(y = 1 | x), but it can only be used to construct an upper bound on pjoint(y = 0 | x), which appears in half the terms of the NCE objective. Likewise, a lower bound on p noise is not useful, because it provides only an upper bound on pjoint(y = 1 | x).
When the model distribution is copied to define a new noise distribution before each gradient step, NCE defines a procedure called self-contrastive estimation, whose expected gradient is equivalent to the expected gradient of maximum likelihood (Goodfellow, 2014). The special case of NCE where the noise samples are those generated by the model suggests that maximum likelihood can be interpreted as a procedure that forces a model to constantly learn to distinguish reality from its own evolving beliefs, while noise contrastive estimation achieves some reduced computational cost by only forcing the model to distinguish reality from a fixed baseline (the noise model).
Using the supervised task of classifying between training samples and generated samples (with the model energy function used in defining the classifier) to provide a gradient on the model was introduced earlier in various forms (Welling et al., 2003b; Bengio, 2009).
622

